{"version":3,"file":"static/js/60.5a575667.chunk.js","mappings":"8NAcA,EAZe,WACb,OACEA,EAAAA,EAAAA,KAACC,EAAAA,GAAa,CACZC,YAAY,QACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,GAGf,ECMA,EAhBmB,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OADAC,QAAQC,IAAIH,IAEVT,EAAAA,EAAAA,KAAA,MAAAa,SACGL,EAAOM,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAK,OACtBjB,EAAAA,EAAAA,KAAA,MAAAa,UACEb,EAAAA,EAAAA,KAACkB,EAAAA,GAAI,CAACC,GAAE,GAAAC,OAAKJ,GAAMK,MAAO,CAAEC,KAAMb,GAAWI,SAC1CI,KAFID,EAIJ,KAIb,ECkKA,EA3Ke,WACb,IAAAO,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAT,EAAAA,EAAAA,GAAAO,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA0Bd,EAAAA,EAAAA,WAAS,eAAAe,EAAA,OAA+B,QAA/BA,EAAMH,EAAaI,IAAI,gBAAQ,IAAAD,EAAAA,EAAI,EAAE,IAACE,GAAAf,EAAAA,EAAAA,GAAAY,EAAA,GAAlEI,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChBG,EAAcR,EAAaI,IAAI,SA+DrC,OAhDAK,EAAAA,EAAAA,YAAU,WACJD,IACFE,EAAAA,EAAAA,IAAiBF,GAAaG,MAAK,SAAAC,GACjCpB,EAAQoB,GACRhB,GAAW,EACb,GAEJ,GAAG,CAACY,KA0CFK,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAArC,SAAA,EACPoC,EAAAA,EAAAA,MAAA,QAAME,SAvDW,SAAAC,GACnBA,EAAEC,iBACFhB,EAA0B,KAAVK,EAAe,CAAEA,MAAOA,GAAU,CAAC,EACrD,EAoDiC7B,SAAA,EAC3Bb,EAAAA,EAAAA,KAAA,MAAAa,SAAI,YACJb,EAAAA,EAAAA,KAAA,SACEsD,KAAK,OACLC,MAAOb,EACPc,YAAY,aACZC,SArES,SAAAL,GACfT,EAASS,EAAEM,OAAOH,OAClB,IAAMI,EAAYP,EAAEM,OAAOH,MAEvBlB,EADU,KAAdsB,EACoB,CAAEjB,MAAOiB,GACT,CAAC,EACvB,OAkEK5B,IAAW/B,EAAAA,EAAAA,KAAC4D,EAAM,KACnB5D,EAAAA,EAAAA,KAAC6D,EAAU,CAACrD,OAAQmB,KACpB3B,EAAAA,EAAAA,KAAC8D,EAAAA,GAAc,MAGrB,C","sources":["components/Spiner.js","components/MoviesList.js","pages/Movies.js"],"sourcesContent":["import { RotatingLines } from 'react-loader-spinner';\n\nconst Spiner = () => {\n  return (\n    <RotatingLines\n      strokeColor=\"green\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"20\"\n      visible={true}\n    />\n  );\n};\n\nexport default Spiner;\n","import { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  console.log(location);\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import { Suspense, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport { getMoviesByQuery } from '../services/Api';\nimport Spiner from 'components/Spiner';\nimport MoviesList from 'components/MoviesList';\n\nconst Movies = () => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(() => searchParams.get('query') ?? '');\n  const searchQuery = searchParams.get('query');\n\n  const onChange = e => {\n    setQuery(e.target.value);\n    const inputText = e.target.value;\n    inputText !== ''\n      ? setSearchParams({ query: inputText })\n      : setSearchParams({});\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams(query !== '' ? { query: query } : {});\n  };\n\n  useEffect(() => {\n    if (searchQuery) {\n      getMoviesByQuery(searchQuery).then(response => {\n        setData(response);\n        setLoading(false);\n      });\n    }\n  }, [searchQuery]);\n\n  // const Movies = () => {\n  //   const [data, setData] = useState([]);\n  //   const [loading, setLoading] = useState(false);\n  //   const [searchParams, setSearchParams] = useSearchParams();\n  //   const query = searchParams.get('query') ?? '';\n\n  //   const onChange = e => {\n  //     const inputText = e.target.value;\n  //     inputText !== ''\n  //       ? setSearchParams({ query: inputText })\n  //       : setSearchParams({});\n  //   };\n\n  //   const handleSubmit = e => {\n  //     e.preventDefault();\n\n  //     getMoviesByQuery(query).then(response => {\n  //       setData(response);\n\n  //       setLoading(true);\n\n  //       getMoviesByQuery(query).then(response => {\n  //         if (response.length === 0) {\n  //           setLoading(false);\n\n  //           return toast.warn(\"We couldn't find result on your request.\", {\n  //             position: 'top-right',\n  //             autoClose: 3000,\n  //             theme: 'colored',\n  //           });\n  //         }\n\n  //         setData(response);\n  //         setLoading(false);\n  //         setSearchParams('');\n  //       });\n  //     });\n  //   };\n\n  return (\n    <Suspense>\n      <form onSubmit={handleSubmit}>\n        <h2>Search</h2>\n        <input\n          type=\"text\"\n          value={query}\n          placeholder=\"Fight Club\"\n          onChange={onChange}\n        />\n      </form>\n      {loading && <Spiner />}\n      <MoviesList movies={data} />\n      <ToastContainer />\n    </Suspense>\n  );\n};\n\n//   const [query, setQuery] = useState('');\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(false);\n\n//   const [searchParams, setSearchParams] = useSearchParams();\n//   const queryString = searchParams.get('query') ?? '';\n\n//   const onChange = e => {\n//     setQuery(e.target.value);\n//     setSearchParams(query !== '' ? { query: query } : {});\n//   };\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     if (!query) {\n//       return;\n//     }\n\n//     setLoading(true);\n\n//     if (query === '') {\n//       return toast.error('–ó–∞–ø–æ–≤–Ω—ñ—Ç—å –ø–æ–ª–µ –ø–æ—à—É–∫—É!', {\n//         position: 'top-right',\n//         autoClose: 2000,\n//         hideProgressBar: false,\n//         closeOnClick: true,\n//         pauseOnHover: true,\n//         draggable: true,\n//         progress: undefined,\n//         theme: 'colored',\n//       });\n//     }\n\n//     getMoviesByQuery(query)\n//       .then(response => {\n//         if (response.length === 0) {\n//           setLoading(false);\n//           setData([]);\n//           return toast.warn(\"We couldn't find result on your request.\", {\n//             position: 'top-right',\n//             autoClose: 3000,\n//             theme: 'colored',\n//           });\n//         }\n\n//         setData(response);\n//         setLoading(false);\n//       })\n//       .catch(error => {\n//         console.log(error);\n//       });\n\n//     setQuery('');\n//   };\n\n//   return (\n//     <>\n//       <form onSubmit={handleSubmit}>\n//         <h2 className=\"formSearchTitle\">Search</h2>\n//         <input\n//           className=\"formInput\"\n//           type=\"text\"\n//           value={query}\n//           placeholder=\"Fight Club\"\n//           onChange={onChange}\n//         />\n//         <button className=\"formSubmit\" type=\"sumbit\">\n//           Search üîç\n//         </button>\n//       </form>\n//       {loading && <Spiner />}\n//       <div>\n//         <ul>\n//           {data.map(({ id, title }) => (\n//             <li key={id}>\n//               <Link to={`${id}`}>{title}</Link>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//       <ToastContainer />\n//     </>\n//   );\n// };\n\nexport default Movies;\n"],"names":["_jsx","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","_ref","movies","location","useLocation","console","log","children","map","_ref2","id","title","Link","to","concat","state","from","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","loading","setLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState5","_searchParams$get","get","_useState6","query","setQuery","searchQuery","useEffect","getMoviesByQuery","then","response","_jsxs","Suspense","onSubmit","e","preventDefault","type","value","placeholder","onChange","target","inputText","Spiner","MoviesList","ToastContainer"],"sourceRoot":""}